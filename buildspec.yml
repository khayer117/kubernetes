version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
    commands: 
      - curl -sS -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install dnsutils jq
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email)
      - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image... 
      - cd ./app-test-k8s
      - $(aws ecr get-login --no-include-email)         
      - docker build -t akb-app:latest .
      - docker tag akb-app:latest 435912016443.dkr.ecr.ap-southeast-1.amazonaws.com/bdmapper:v1
      - docker push 435912016443.dkr.ecr.ap-southeast-1.amazonaws.com/bdmapper:v1      
  post_build:
    commands:
      - echo Build completed on `date`
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::$AWS_ACCOUNT:role/EKS_ServiceRole_ReadOnly_Kubernetes --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws sts get-caller-identity      
      - aws eks update-kubeconfig --name akb-dev
      - kubectl apply -f deployment-eks.yaml
      - echo applied eks deployment `date`