-- rabbitmq cloud
cloudamqp.com


-- nodejs basic
https://www.guru99.com/node-js-tutorial.html

 -- install nodejs express
 https://code.visualstudio.com/docs/nodejs/nodejs-tutorial
 https://www.tutorialspoint.com/nodejs/nodejs_express_framework.htm
 
 -- app-sender
 $ npm install -g express-generator
 $ express app-sender -view pug
 $ cd .\app-sender
 $ npm install
 $ npm start

-- app-reciver
$ npm ini //create new project

 --- enable view render
 $ npm install ejs
  https://ejs.co/#install
 https://github.com/mde/ejs/wiki/Using-EJS-with-Express


--- Docker: sender
$ docker build --tag app-sender:v1 .
$ docker run --publish 3000:3000 --name aps app-sender:v1


--- Docker: reciever
$ docker build --tag app-reciever:v1 .
$ docker run --name ar app-reciever:v1
$ docker exec -it ar /bin/bash

-- Kubernetes
$ minikube docker-env
$ & minikube docker-env | Invoke-Expression
$ docker build --tag app-sender:v1 .
$ docker build --tag app-reciever:v1 .      # dont forget change folder
$ kubectl apply -f ./deployment-{0}.yaml       # for both
$ kubectl get services
$ minikube service app-sender-service

$ kubectl delete service app-sender-service
$ kubectl delete deploy app-sender-deployment
$ kubectl delete deploy app-reciever-deployment

-- troubleshoot
$ kubectl logs [pod id]

--- ingress
-- Hellow world
# docker driver version of minkube not support ingress.
https://github.com/kubernetes/minikube/issues/7332
So to test ingress local, start minikube VM version. Latest minikube is use docker driver and WSL2.
$ minikube start --vm=true

https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/


 -- Rabbidmq
 https://www.rabbitmq.com/tutorials/tutorial-one-javascript.html
 https://github.com/squaremo/amqp.node
 api reference: http://www.squaremobius.net/amqp.node/channel_api.html#confirmchannel

 -- promise
 https://medium.com/dev-bits/writing-neat-asynchronous-node-js-code-with-promises-32ed3a4fd098
 
#################### kubernetes at docker desktop ########################
1. Docker > settting > kubernetes > enable kubernetes cluster
2. Test: kubectl --help
3. Example deployment: app-test-k8s\deployment-docker-kube.yaml
4. Ingerss:
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.41.2/deploy/static/provider/cloud/deploy.yaml
https://stackoverflow.com/questions/65193758/enable-ingress-controller-on-docker-desktop-with-wls2

Example:
app-notifier\ingress\scenerio-ingress-docker-kube.yaml

Test ingress(Docker kube):
- Stop IIS or any other web services except ingress(nginx)
- Host entry
127.0.0.1 kubetest.info
127.0.0.1 order.kubetest.info
127.0.0.1 payment.kubetest.info
- From browser
http://payment.kubetest.info
http://kubetest.info/payment

-------------------- Kustomization --------------------
https://kustomize.io
https://kubectl.docs.kubernetes.io/guides/introduction/kustomize/

Command at Powershell:
kustomize build overlays\dev-blue-Cluster > test-kube.yaml
kustomize build overlays\dev-blue-Cluster | kubectl apply -f -
 
 
 